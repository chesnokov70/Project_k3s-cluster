#-----------------------------------------------------------
#Creates a namespace metallb-system.
#Defines ServiceAccounts for MetalLB's controller and speaker.
#Grants permissions using ClusterRoles and RoleBindings.
#Deploys MetalLB's controller as a Deployment.
#Deploys MetalLB's speaker as a DaemonSet.
#Configures MetalLB with an IP range
#-----------------------------------------------------------
#1. Namespace Creation
apiVersion: v1
kind: Namespace
metadata:
  name: metallb-system
  labels:
    app: metallb
#Creates a Kubernetes namespace named metallb-system.
#This is where all MetalLB-related resources will be deployed.
---
# 2. Service Accounts
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: metallb
  name: controller
  namespace: metallb-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: metallb
  name: speaker
  namespace: metallb-system
# controller ServiceAccount: Used by the MetalLB controller to manage LoadBalancer services.
# speaker ServiceAccount: Used by the MetalLB speaker component, which advertises IPs to the network.
---
# 3. ClusterRoles for Permissions
# Controller Role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: metallb
  name: metallb-system:controller
rules:
- apiGroups:
  - ''
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ''
  resources:
  - services/status
  verbs:
  - update
- apiGroups:
  - ''
  resources:
  - events
  verbs:
  - create
  - patch
# Grants the controller access to:
# Get, list, and watch services.
# Update service statuses.
---
# Create and patch events (for logging and debugging).
# Speaker Role
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: metallb
  name: metallb-system:speaker
rules:
- apiGroups:
  - ''
  resources:
  - services
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups: ["discovery.k8s.io"]
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ''
  resources:
  - events
  verbs:
  - create
  - patch
# Grants the speaker access to:
# Get, list, and watch services, endpoints, and nodes.
# Read EndpointSlices (used in Kubernetes service discovery).
# Create and patch events.
---
# 4. Role-Based Access Control (RBAC)
# Namespace-Scoped Roles
# config-watcher: Watches ConfigMaps inside metallb-system.
# pod-lister: Allows listing pods inside metallb-system.
# controller: Grants MetalLB's controller permissions for secrets and managing deployments.
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: metallb
  name: config-watcher
  namespace: metallb-system
rules:
- apiGroups:
  - ''
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: metallb
  name: pod-lister
  namespace: metallb-system
rules:
- apiGroups:
  - ''
  resources:
  - pods
  verbs:
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: metallb
  name: controller
  namespace: metallb-system
rules:
- apiGroups:
  - ''
  resources:
  - secrets
  verbs:
  - create
- apiGroups:
  - ''
  resources:
  - secrets
  resourceNames:
  - memberlist
  verbs:
  - list
- apiGroups:
  - apps
  resources:
  - deployments
  resourceNames:
  - controller
  verbs:
  - get
---
# 5. RoleBindings and ClusterRoleBindings
# These bind the previously defined roles to the respective service accounts.
# Cluster Role Bindings
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: metallb
  name: metallb-system:controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: metallb-system:controller
subjects:
- kind: ServiceAccount
  name: controller
  namespace: metallb-system
# Grants metallb-system:controller ClusterRole to controller ServiceAccount.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: metallb
  name: metallb-system:speaker
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: metallb-system:speaker
subjects:
- kind: ServiceAccount
  name: speaker
  namespace: metallb-system
# Grants metallb-system:speaker ClusterRole to speaker ServiceAccount.
---
# 6. Deploying MetalLB Components
# DaemonSet: Speaker
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: metallb
    component: speaker
  name: speaker
  namespace: metallb-system
spec:
  selector:
    matchLabels:
      app: metallb
      component: speaker
  template:
    metadata:
      labels:
        app: metallb
        component: speaker
    spec:
      containers:
      - image: quay.io/metallb/speaker:v0.12.1
        name: speaker
        args:
          - --node-name=$(NODE_NAME)  # ✅ Add this line
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName  # ✅ Add this block
      serviceAccountName: speaker
      hostNetwork: true
# Deploys MetalLB speaker as a DaemonSet (one pod per node).
# Runs in hostNetwork: true mode to announce external IPs.
---
# Deployment: Controller
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: metallb
    component: controller
  name: controller
  namespace: metallb-system
spec:
  selector:
    matchLabels:
      app: metallb
      component: controller
  template:
    metadata:
      labels:
        app: metallb
        component: controller
    spec:
      containers:
      - image: quay.io/metallb/controller:v0.12.1
        name: controller
      serviceAccountName: controller
# Deploys MetalLB controller as a Deployment (only one replica).
---
# 7. ConfigMap for MetalLB Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: metallb-system
  name: config
data:
  config: |
    address-pools:
    - name: default
      protocol: layer2
      addresses:
      - 192.168.1.67-192.168.1.67
# Defines an IP pool for MetalLB.
# Uses layer2 mode, which announces the IP over the local network.
# The IP range 192.168.1.67 is assigned to LoadBalancer services.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  # Name of the ClusterRole
  name: metallb-speaker-role
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  # Name of the ClusterRoleBinding
  name: metallb-speaker-binding
subjects:
- kind: ServiceAccount
  name: speaker
  namespace: metallb-system
roleRef:
  kind: ClusterRole
  name: metallb-speaker-role
  apiGroup: rbac.authorization.k8s.io

